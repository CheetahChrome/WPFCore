<Window x:Class="WPFCore3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFCore3"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainVM, IsDesignTimeCreatable=True}"
        Title="MainWindow" Height="450" Width="800">
    <!--<ListBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding LogLines}"/>-->



    <!-- 
    // Step 1 define the Models
	public class People : List<Person> { }

	public class Person
	{
		public string First { get; set; }
		public string Last { get; set; }
		public string Phone { get; set; }
		public string Name => $"{First} {Last}"; 
	}

// Step 2 provide the namespace where the model is

     xmlns:model="clr-namespace:WPFStack.Model"
 
// Step 3 wire up some data in the usercontrol/page/window's resources.

    <UserControl.Resources>
        <model:People x:Key="People">
            <model:Person First="Joe" Last="Smith" Phone="303-555-5555"/>
            <model:Person First="Jenny" Last="Johnson" Phone="720-867-5309" />
            <model:Person First="Frank" Last="Wright" Phone="202-555-5555" />
        </model:People>
    </UserControl.Resources>
-->

    <StackPanel>

 
    <ItemsControl Margin="10"
                 
                 HorizontalAlignment="Stretch"
              ItemsSource="{Binding LogLines}">
        <!--The ItemsControl has no default visual appearance.
      Use the Template property to specify a ControlTemplate to define
      the appearance of an ItemsControl. The ItemsPresenter uses the specified
      ItemsPanelTemplate (see below) to layout the items. If an
      ItemsPanelTemplate is not specified, the default is used. (For ItemsControl,
      the default is an ItemsPanelTemplate that specifies a StackPanel.-->
        <ItemsControl.Template>
            <ControlTemplate TargetType="ItemsControl">
                <Border BorderBrush="Aqua" BorderThickness="1" CornerRadius="15">
                    <ItemsPresenter/>
                </Border>
            </ControlTemplate>
        </ItemsControl.Template>
        <!--Use the ItemsPanel property to specify an ItemsPanelTemplate
      that defines the panel that is used to hold the generated items.
      In other words, use this property if you want to affect
      how the items are laid out.-->
        <!--<ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <WrapPanel />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>-->
        <!--Use the ItemTemplate to set a DataTemplate to define
      the visualization of the data objects. This DataTemplate
      specifies that each data object appears with the Proriity
      and TaskName on top of a silver ellipse.-->
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <DataTemplate.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                </DataTemplate.Resources>
                <!--<Grid>-->
                        <TextBlock Margin="0" Text="{Binding }" 
                                   HorizontalAlignment="Left"
                                   Padding=""/>
                        <!--<TextBlock Margin="3,0,3,7"
                     Text="{Binding Path=Last}"/>-->
                <!--</Grid>-->
            </DataTemplate>
        </ItemsControl.ItemTemplate>
        <!--Use the ItemContainerStyle property to specify the appearance
      of the element that contains the data. This ItemContainerStyle
      gives each item container a margin and a width. There is also
      a trigger that sets a tooltip that shows the description of
      the data object when the mouse hovers over the item container.-->
        <ItemsControl.ItemContainerStyle>
            <Style>
                <Setter Property="Control.Width" Value="300"/>
                <Setter Property="Control.Margin" Value="0, -4"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver" Value="True">
                        <Setter Property="Control.ToolTip"
                  Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                          Path=Content.Json}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ItemsControl.ItemContainerStyle>
    </ItemsControl>

        <DataGrid ItemsSource="{Binding LogLines}"/>


    </StackPanel>



</Window>
